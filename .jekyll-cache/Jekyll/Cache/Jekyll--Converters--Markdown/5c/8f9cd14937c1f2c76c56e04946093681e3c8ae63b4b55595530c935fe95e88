I"S<p><br /></p>

<h2 id="1-파일-입출력">1. 파일 입출력</h2>

<p>파일 입출력은 말 그대로, 파일 형태로 데이터를 입출력 하는 라이브러리를 사용하는 방법을 살펴본다.</p>

<ul>
  <li>필요한 라이브러리 헤더 fstream(파일클래스)</li>
  <li>네임스페이스 std(표준 라이브러리)</li>
</ul>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="code"><pre><span class="cp">#include &lt;fstream&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;
</span>
<span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">string</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"안녕하세요.글자를써봅시다."</span><span class="p">;</span>

	<span class="n">ofstream</span> <span class="n">ofs</span><span class="p">(</span><span class="s">"file.txt"</span><span class="p">);</span> <span class="c1">//file.txt 파일을 연다.</span>
	<span class="n">ofs</span> <span class="o">&lt;&lt;</span> <span class="n">str</span><span class="p">;</span> <span class="c1">// file.txt 파일에 str 문자열을 쓴다.</span>
	<span class="n">ofs</span><span class="p">.</span><span class="n">close</span><span class="p">();</span> <span class="c1">//file.txt를 닫는다.</span>
	<span class="n">ifstream</span> <span class="n">ifs</span><span class="p">(</span><span class="s">"file.txt"</span><span class="p">);</span> <span class="c1">//file.txt 파일을 다시열고,</span>
	<span class="n">ifs</span> <span class="o">&gt;&gt;</span> <span class="n">str</span><span class="p">;</span> <span class="c1">//파일의 내용을 str에 저장한다.</span>
	<span class="n">str</span> <span class="o">=</span> <span class="n">str</span><span class="o">+</span><span class="s">"(읽어옴.)"</span><span class="p">;</span>
	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">str</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>이 코드를 실행하면, file.txt 파일이 프로젝트 폴더에 생성되고, 결과는 다음과 같이 나온다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>안녕하세요.글자를써봅니다.(읽어옴.)
</code></pre></div></div>

<p>하지만, 주의할 점은 띄어쓰기를 하면 이상하게 출력될 수 있다는 점을 확인하기 바란다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>출력 : ofstream → fstream(ios::out);
입력 : ifstream → fstream(ios::in);
</code></pre></div></div>
<p><br /></p>
<ul>
  <li>파일 모드 표</li>
</ul>

<table>
  <thead>
    <tr>
      <th>파일 모드</th>
      <th>설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>ios::in</td>
      <td>파일 읽기</td>
    </tr>
    <tr>
      <td>ios::out</td>
      <td>파일 쓰기</td>
    </tr>
    <tr>
      <td>ios::app</td>
      <td>파일에 이어쓰기(마지막 줄부터)<br />예)fstream(ios::app)와 같이 ios::out과 함께 써야 함.</td>
    </tr>
    <tr>
      <td>ios::trunc</td>
      <td>파일이 이미 있으면, 삭제하고 새로 파일 작성<br />예) 파일 읽을 때: fstream(ios::in|ios::trunc)<br />예) 파일 쓸 때:fstream(ios::out|ios::trunc)</td>
    </tr>
    <tr>
      <td>ios::binary</td>
      <td>이진 파일 처리<br />예) 파일 읽을 때: fstream(ios::in|ios::binary)<br />예) 파일 쓸 때: fstream(ios::out|ios::binary)</td>
    </tr>
  </tbody>
</table>

<p><img src="/assets/img/" title="" /></p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="code"><pre><span class="cp">#include &lt;fstream&gt;
</span>
<span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>

	<span class="n">ofstream</span> <span class="n">ofs</span><span class="p">;</span>

	<span class="c1">//file.txt 파일을 연다.(없으면 생성)</span>
	<span class="n">ofs</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"file.txt"</span><span class="p">);</span>

	<span class="c1">//"This is an apple" 문자열을 쓴다.</span>
	<span class="n">ofs</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">"This is an apple"</span><span class="p">,</span> <span class="mi">16</span><span class="p">);</span>

	<span class="c1">//tellp() 멤버함수를 이용해서 파일의 현재 위치를 얻는다.</span>
	<span class="c1">// 현재위치는 This is an apple의 맨 끝일 것이다.</span>
	<span class="kt">long</span> <span class="n">pos</span> <span class="o">=</span> <span class="n">ofs</span><span class="p">.</span><span class="n">tellp</span><span class="p">();</span>

	<span class="c1">//현재 위치에서 7만큼 위치를 뒤로 이동시킨다.</span>
	<span class="c1">//현재 위치를 앞뒤로 조정하는 것을 오프셋(offset)을 조정한다고 한다.</span>
	<span class="c1">//오프셋 -7로 조정한 위치는 문자 'n'이다.</span>
	<span class="n">ofs</span><span class="p">.</span><span class="n">seekp</span><span class="p">(</span><span class="n">pos</span><span class="o">-</span><span class="mi">7</span><span class="p">);</span>

	<span class="c1">//조정한 위치부터 문자열 "sam" 을 쓴다.</span>
	<span class="n">ofs</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">" sam"</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>

	<span class="c1">//파일을 닫는다.</span>
	<span class="n">ofs</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>[출처:최신 표준 C++로 쉽고 빠르게 안내하는 모던 C++ 프로그래밍]</p>
:ET