I"i<h2 id="1-들어가며">1. 들어가며</h2>

<p>git을 쓰면서 트랙킹되고 있는 파일 즉, git의 인덱스에 등록된 파일을 <strong>.gitignore</strong>로 등록해도 작동이 안되는 경우가 있다. 사실 gitignore와 다른 개념이기 때문에 이 명령어가 작동 안되는 것이다.</p>

<p>지금같은 경우는 <code class="highlighter-rouge">로컬에 파일은 있지만, 이 파일을 리모트로 올리지 않겠다(리모트는 있으면 삭제됨)</code>가 아니라, <code class="highlighter-rouge">로컬의 파일과 리모트의 파일의 내용을 다르게 유지하고 싶은 경우</code>에 해당한다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git add .
</code></pre></div></div>
<p>이렇게 쓰면, 기존에 해당 폴더에 있는 모든 파일과 하위 폴더 내용이 모두 git index에 등록이 된다.</p>

<p>그래서 우리는 .gitignore라는 파일을 활용하게 되는데, 이미 등록이 된 경우 인덱스에서 빠져나오지 않는다.</p>

<h2 id="2-gitignore-만들기-참고">2. .gitignore 만들기 (참고)</h2>

<p>이 경우는 사실 로컬 디렉토리에는 존재하는 파일이지만, 리모트(github)에는 올리고 싶지 않은 *.log파일이나 기타 파일들에 해당할 수 있다.</p>

<ul>
  <li>로컬 <strong>.gitignore</strong>를 만듭니다.</li>
</ul>

<p>저장소에 <strong>.gitignore</strong> 라는 파일을 생성하면 Git은 커밋하기 전에 파일을 사용하여 무시할 파일과 디렉토리를 결정한다.</p>

<p><strong>.gitignore</strong>의 파일은 저장소로 <strong>git add</strong>를 수행할 때, 추적하지 않고, <strong>git commit</strong>을 통해 인덱싱 되지 않고, <strong>git push</strong>를 통해 리모트 리포지토리에도 저장되지 않는다.</p>

<h3 id="1-터미널에서-git-저장소의-위치로-이동하십시오">1. 터미널에서 Git 저장소의 위치로 이동하십시오.</h3>
<h3 id="2-gitignore-파일-touch-gitignore을-작성하려면-입력하십시오-">2. .gitignore 파일 touch .gitignore을 작성하려면 입력하십시오 .</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ touch .gitignore
</code></pre></div></div>

<p>파일이 이미 체크인되어 있고 무시하려는 경우 나중에 규칙을 추가해도 Git 은 파일을 무시 하지 않습니다 . 이 경우 터미널에서 다음 명령을 실행하여 파일을 먼저 추적 해제해야합니다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git rm --cached FILENAME
</code></pre></div></div>

<p>[출처]<a href="https://git-scm.com/book/ko/v2/Git%EC%9D%98-%EA%B8%B0%EC%B4%88-%EC%88%98%EC%A0%95%ED%95%98%EA%B3%A0-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%97%90-%EC%A0%80%EC%9E%A5%ED%95%98%EA%B8%B0">git-scm</a></p>
:ET